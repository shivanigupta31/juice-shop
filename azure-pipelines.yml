# Node.js
# Build a general Node.js project with npm.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
- master

pool:
  vmImage: ubuntu-latest

steps:
- task: NodeTool@0
  inputs:
    versionSpec: '12.x'
  displayName: 'Install Node.js'
  

- script: |
    npm install 
#    npm build 
  displayName: 'npm install and build'
- task: ArchiveFiles@2
  displayName: 'Archive files'
  inputs:
    rootFolderOrFile: '$(Build.SourcesDirectory)'
    includeRootFolder: false
    archiveType: zip
    archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
    replaceExistingArchive: true
- task: PublishBuildArtifacts@1
  inputs:
     PathtoPublish: '$(Build.ArtifactStagingDirectory)'
     ArtifactName: 'drop'
     publishLocation: 'Container'

#- script: |
#    npm pack
#    ls '$(Build.SourcesDirectory)'
#  displayName: 'Package for npm release'
  


#- task: CopyFiles@2
#  inputs:
#    sourceFolder: '$(Build.SourcesDirectory)'
#    contents: '*.tgz' 
#    targetFolder: $(Build.ArtifactStagingDirectory)/npm
#  displayName: 'Copy npm package'
#- task: CopyFiles@2
#  inputs:
#    sourceFolder: '$(Build.SourcesDirectory)'
#    contents: 'package.json' 
#    targetFolder: $(Build.ArtifactStagingDirectory)/npm
#  displayName: 'Copy package.json'
#- task: PublishBuildArtifacts@1
#  inputs:
#    pathtoPublish: '$(Build.ArtifactStagingDirectory)/npm'
#    artifactName: npm
#  displayName: 'Publish npm artifact'

- task: AzureRmWebAppDeployment@4
  inputs:
    ConnectionType: 'AzureRM'
    azureSubscription: 'Azure Service Connection- Shivani'
    appType: 'webAppLinux'
    WebAppName: 'juiceshop31'
    packageForLinux: '$(System.DefaultWorkingDirectory)/**/*.zip'
    RuntimeStack: 'NODE|12-lts'
    StartupCommand: 'npm start'

#- task: CmdLine@2
#  inputs:
#    script: |
#      echo 'printing root dir'
#      
#      echo '$(Build.BinariesDirectory)'
#      pwd
#      ls -lah /home/vsts/work/1
#      ls -lah /home/vsts/work/1/b


  
#- task: ArchiveFiles@2
#  inputs:
#    rootFolderOrFile: '/home/vsts/work/1/s/build'
#    includeRootFolder: true
#    archiveType: 'zip'
#    archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
#    replaceExistingArchive: true
#    verbose: true


